spring.application.name=Todo-list

############### MySQL Application Properties ###############
#spring.datasource.url=jdbc:mysql://localhost:3306/todo_list
#spring.datasource.username=root
#spring.datasource.password=
#
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.hibernate.ddl-auto=update


############### PostgreSQL Application Properties ###############
spring.sql.init.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/todo_list
spring.datasource.username=postgres
spring.datasource.password=

spring.jpa.database=POSTGRESQL
#spring.jpa.show-sql=true   # Showing this clutters the console, only use for debugging
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


############### GitHub OAuth2 Application Properties ###############
spring.security.oauth2.client.registration.github.clientId=YOUR_CLIENT_ID
spring.security.oauth2.client.registration.github.clientSecret=YOUR_CLIENT_SECRET
spring.security.oauth2.client.registration.github.scope=read:user, user:email, repo
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/login/oauth2/code/github
spring.security.oauth2.client.registration.github.client-name=GitHub

spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login

############### Google OAuth2 Application Properties ###############
spring.security.oauth2.client.registration.google.clientId=YOUR_CLIENT_ID
spring.security.oauth2.client.registration.google.clientSecret=YOUR_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

############### Facebook OAuth2 Application Properties ###############
# Note: Facebook apps require a Privacy Policy URL to be set in the app settings
# You can create one using https://www.freeprivacypolicy.com/
# My Privacy Policy URL: https://www.freeprivacypolicy.com/live/b21277aa-3f96-49cf-94bf-fba84d9d5f51
# Also, you need a Terms of Service URL from the same website
spring.security.oauth2.client.registration.facebook.clientId=YOUR_CLIENT_ID
spring.security.oauth2.client.registration.facebook.clientSecret=YOUR_CLIENT_SECRET
# To obtain the email, you need to request "advanced access" from Facebook in App Review > Permissions and Features
spring.security.oauth2.client.registration.facebook.scope=email, public_profile
spring.security.oauth2.client.registration.facebook.redirect-uri=http://localhost:8080/login/oauth2/code/facebook
spring.security.oauth2.client.registration.facebook.client-name=Facebook

spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v3.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v3.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me
spring.security.oauth2.client.provider.facebook.user-name-attribute=id